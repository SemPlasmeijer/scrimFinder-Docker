version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    command: ["bash", "-c", "chmod 400 /var/lib/rabbitmq/.erlang.cookie; rabbitmq-server"]
    networks:
      - rabbitmq-go-net
  scrimfinderapi:
    container_name: "scrimFinder-API"
    image: semplasmeijer/scrimfinderapi:apiv1
    build:
      dockerfile: Dockerfile
      context: ../../scrimFinder-API
    ports:
      - 8082:8082
    networks:
      - spring-cloud-network
  scrimfinderwq:
    image: semplasmeijer/scrimfinderwq:wqv1
    depends_on:
      - rabbitmq
      - db
    container_name: "scrimFinder-WQ"
    build:
      dockerfile: Dockerfile
      context: ../../scrimfinder-WQ
    ports:
      - 8081:8081
    networks:
      - rabbitmq-go-net
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: scrimfinder
      DB_NAME: scrimfinder
    links:
      - db
  scrimfinderfe:
    container_name: "scrimFinder-FE"
    image: semplasmeijer/scrimfinderfe:fev1
    build:
      dockerfile: Dockerfile
      context: ../../scrimFinder-FE
    ports:
      - 8080:8080
  db:
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=scrimfinder
      - MYSQL_ROOT_PASSWORD=scrimfinder
    ports:
      - '3306:3306'
    volumes:
      - db:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
volumes:
  db:
    driver: local
networks:
  rabbitmq-go-net:
    driver: bridge
  spring-cloud-network:
    driver: bridge